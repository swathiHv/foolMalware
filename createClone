#!/bin/sh

statusCheck_name= virsh net-list | sed -n 3p | awk '{print $1}'
statusCheck_state= virsh net-list | sed -n 3p | awk '{print $2}'

echo $statusCheck_name
echo $statusCheck_state

if [[ "$statusCheck_name" != $default && "$statusCheck_state" != $active ]]; then
    echo Defining default vm now
    virsh net-undefine default
    virsh net-destroy default
    virsh net-define /usr/share/libvirt/networks/default.xml
    virsh net-start default
fi

statusCheck=$(service libvirtd status | sed -n 3p | awk '{print $2}')

if [[ "$statusCheck" != $active ]]; then
    service libvirtd restart
fi

virsh suspend $PRIMARY_VM

vm_clone=$(virt-clone --original $PRIMARY_VM --auto-clone | tail -n -1 | awk '{print $2}' | sed "s/^\([\"']\)\(.*\)\1\$/\2/g")

echo Cloned vm name $vm_clone

virsh resume $PRIMARY_VM

virsh start $vm_clone

sleep 90

clone_ip=$(virsh domifaddr "$vm_clone" | sed -n 3p | awk '{print $4}')

echo clone ip $clone_ip

echo export CLONE_VM_IP=$clone_ip > export_ip

#for ip in "$(virsh net-dhcp-leases default | tail -n +3 | awk '{print $5}')";
#do
#    if [[ $ip != $PRIMARY_VM_IP ]]; then
#        export CLONE_VM_IP="$ip"
#    fi
#done
