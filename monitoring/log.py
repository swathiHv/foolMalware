import time
import psutil
import requests
import subprocess

SLEEP_TIME = 2 #seconds

def post_data(data):
    requests.post('http://10.0.1.4:8000/log', json=data)

def run_command(cmd):
    proc = subprocess.Popen(cmd, shell=True, stdout=subprocess.PIPE)
    return [x.decode('utf-8').strip().split(':')[-1] for x in proc.stdout.readlines()]

def get_users():
    users = [i.split(':') for i in open('/etc/shadow').readlines()]
    return [i[0] for i in users if i[1] not in ('!', '*') and not i[0].startswith('systemd')]

def get_disk_bytes():
    counter = psutil.disk_io_counters()
    return counter.read_bytes + counter.write_bytes

def get_net_bytes():
    counter = psutil.net_io_counters()
    return counter.bytes_sent + counter.bytes_recv

def get_listening_ports():
    return list(set(run_command("sudo netstat -plnt | awk '{if(NR>2)print $4}'")))

def RatePerSecondGen(raw_function):
    prev = raw_function()
    while True:
        time.sleep(SLEEP_TIME)
        val = raw_function()
        diff = val - prev
        diff = diff if diff > 0 else 0
        yield float(diff) / SLEEP_TIME
        prev = val

def StatsGen():
    for disk, net in zip(RatePerSecondGen(get_disk_bytes), RatePerSecondGen(get_net_bytes)) :
        mem = psutil.virtual_memory()
        yield {
            'cpu': psutil.cpu_percent(),
            'mem': mem.used / mem.available * 100,
            'net': net,
            'disk': disk,
            'users': get_users(),
            'ports': get_listening_ports()
        }

def main():
    for stats in StatsGen():
        post_data(stats)

if __name__ == '__main__':
    main()
