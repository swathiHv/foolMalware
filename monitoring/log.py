import requests
import psutil
import time
import subprocess

SLEEP_TIME = 2 # seconds

def post_data(data):
    requests.post(
        'http://10.0.1.4:8000/log',
        json=data
    )

def get_users():
    users = [i.split(':') for i in open('/etc/shadow').readlines()]
    return [i[0] for i in users if i[1] not in ('!', '*') and not i[0].startswith('systemd')]

def get_disk_bytes():
    counter = psutil.disk_io_counters()
    return counter.read_bytes + counter.write_bytes

def get_net_bytes():
    counter = psutil.net_io_counters()
    return counter.bytes_sent + counter.bytes_recv

def RatePerSecondGen(raw_function):
    prev = raw_function()
    while True:
        time.sleep(SLEEP_TIME)
        val = raw_function()
        diff = val - prev
        diff = diff if diff > 0 else 0
        yield float(diff) / SLEEP_TIME
        prev = val

def StatsGen():
    for disk, net in zip(RatePerSecondGen(get_disk_bytes), 
                                    RatePerSecondGen(get_net_bytes)):
        mem = psutil.virtual_memory()
        yield {
            'cpu': psutil.cpu_percent(),
            'mem': mem.used / mem.available * 100,
            'disk': disk,
            'net': net,
            'users': get_users() 
        }

def main():
    for stats in StatsGen():
        post_data(stats)

if __name__ == '__main__':
    main()
