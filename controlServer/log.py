import requests
import psutil
from time import sleep
import subprocess

SLEEP_TIME = 5 # seconds
NETWORK_INTERFACE = 'wlp58s0'

def post_data(data):
    print(data)

def RatePerSecondGen(raw_function):
    prev = raw_function()
    while True:
        val = raw_function()
        diff = val - prev
        diff = diff if diff > 0 else 0
        yield float(diff) / SLEEP_TIME
        prev = val

def get_disk_bytes():
    counter = psutil.disk_io_counters()
    return counter.read_bytes + counter.write_bytes

def get_net_bytes():
    counter = psutil.net_io_counters()
    return counter.bytes_sent + counter.bytes_recv

def get_stats(disk_speed_gen, net_speed_gen):
    mem = psutil.virtual_memory()
    return {
        'cpu': psutil.cpu_percent(),
        'mem': mem.used / mem.available * 100,
        'disk': next(disk_speed_gen),
        'net': next(net_speed_gen)
    }

def main():
    disk_speed_gen = RatePerSecondGen(get_disk_bytes)
    net_speed_gen = RatePerSecondGen(get_net_bytes)
    next(disk_speed_gen)
    next(net_speed_gen)

    while True:
        try:
            post_data(get_stats(disk_speed_gen, net_speed_gen))
        except Exception as e:
            pass
        sleep(SLEEP_TIME)

if __name__ == '__main__':
    main()
